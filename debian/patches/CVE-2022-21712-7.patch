From 9d53c0f8b38340fe5ca3fa1a7df49347c2dea18a Mon Sep 17 00:00:00 2001
From: Glyph <glyph@twistedmatrix.com>
Date: Sun, 23 Jan 2022 14:37:22 -0800
Subject: [PATCH] tell mypy enough that it can actually find bugs

---
 src/twisted/web/test/test_agent.py | 88 +++++++++---------------------
 1 file changed, 27 insertions(+), 61 deletions(-)

--- a/src/twisted/web/test/test_agent.py
+++ b/src/twisted/web/test/test_agent.py
@@ -6,77 +6,54 @@ Tests for L{twisted.web.client.Agent} an
 """
 import zlib
 from io import BytesIO
-from typing import TYPE_CHECKING, Optional
+from twisted.test.iosim import FakeTransport, IOPump
+from twisted.test.proto_helpers import AccumulatingProtocol, EventLoggingObserver, MemoryReactorClock, StringTransport
+from twisted.test.test_sslverify import certificatesForAuthorityAndServer
+from typing import List, Optional, TYPE_CHECKING, Tuple, cast
 from unittest import SkipTest, skipIf
 
-from zope.interface.declarations import implementer
-from zope.interface.verify import verifyObject
 
 from twisted.trial.unittest import TestCase, SynchronousTestCase
 from twisted.web import client, error, http_headers
-from twisted.web._newclient import RequestNotSent, RequestTransmissionFailed
-from twisted.web._newclient import ResponseNeverReceived, ResponseFailed
-from twisted.web._newclient import PotentialDataLoss
 from twisted.internet import defer, task
 from twisted.python.failure import Failure
 from twisted.python.compat import cookielib, intToBytes, unicode
 from twisted.python.components import proxyForInterface
 from twisted.internet.task import Clock
-from twisted.internet.error import ConnectionRefusedError, ConnectionDone
-from twisted.internet.error import ConnectionLost
+from twisted.internet.error import ConnectionDone, ConnectionLost, ConnectionRefusedError
 from twisted.internet.protocol import Protocol, Factory
 from twisted.internet.defer import Deferred, succeed, CancelledError
 from twisted.internet.endpoints import TCP4ClientEndpoint
 from twisted.internet.address import IPv4Address, IPv6Address
 
-from twisted.test.iosim import FakeTransport, IOPump
-from twisted.test.proto_helpers import (
-    AccumulatingProtocol,
-    EventLoggingObserver,
-    MemoryReactorClock,
-    StringTransport,
-)
-from twisted.test.test_sslverify import certificatesForAuthorityAndServer
+from twisted.web._newclient import HTTP11ClientProtocol, PotentialDataLoss, RequestNotSent, RequestTransmissionFailed, Response, ResponseFailed, ResponseNeverReceived
+from twisted.web.client import BrowserLikePolicyForHTTPS, FileBodyProducer, HTTPConnectionPool, HostnameCachingHTTPSPolicy, Request, ResponseDone, URI, _HTTP11ClientFactory
 
-from twisted.web.client import (
-    URI,
-    FileBodyProducer,
-    BrowserLikePolicyForHTTPS,
-    Request,
-    HostnameCachingHTTPSPolicy,
-    HTTPConnectionPool,
-    ResponseDone,
-    _HTTP11ClientFactory,
-)
-
-from twisted.web.iweb import (
-    UNKNOWN_LENGTH,
-    IAgent,
-    IBodyProducer,
-    IPolicyForHTTPS,
-    IRequest,
-    IResponse,
-    IAgentEndpointFactory,
-)
 from twisted.web.http_headers import Headers
-from twisted.web._newclient import HTTP11ClientProtocol, Response
 
 from twisted.internet.interfaces import IOpenSSLClientConnectionCreator
 from twisted.web.iweb import IPolicyForHTTPS
 from twisted.python.deprecate import getDeprecationWarningString
 from incremental import Version
 
-from twisted.web.client import (BrowserLikePolicyForHTTPS,
-                                HostnameCachingHTTPSPolicy)
 from twisted.internet.test.test_endpoints import deterministicResolvingReactor
 from twisted.internet.endpoints import HostnameEndpoint
-from twisted.web.test.injectionhelpers import (
-    MethodInjectionTestsMixin,
-    URIInjectionTestsMixin,
-)
 from twisted.web.error import SchemeNotSupported
 from twisted.logger import globalLogPublisher
 
+from twisted.web.iweb import IAgent, IAgentEndpointFactory, IBodyProducer, IPolicyForHTTPS, IRequest, IResponse, UNKNOWN_LENGTH
+from twisted.web.test.injectionhelpers import MethodInjectionTestsMixin, URIInjectionTestsMixin
+from zope.interface.declarations import implementer
+from zope.interface.verify import verifyObject
+
+# Creatively lie to mypy about the nature of inheritance, since dealing with
+# expectations of a mixin class is basically impossible (don't use mixins).
+if TYPE_CHECKING:
+    testMixinClass = TestCase
+    runtimeTestCase = object
+else:
+    testMixinClass = object
+    runtimeTestCase = TestCase
 
 try:
     from twisted.internet import ssl
@@ -112,11 +89,10 @@ class StubHTTPProtocol(Protocol):
         tuple consisting of the request and the L{Deferred} returned from the
         request method is appended to this list.
     """
-    def __init__(self):
-        self.requests = []
+    def __init__(self) -> None:
+        self.requests: List[Tuple[Request, Deferred[IResponse]]] = []
         self.state = 'QUIESCENT'
 
-
     def request(self, request):
         """
         Capture the given request for later inspection.
@@ -2655,11 +2631,6 @@ SENSITIVE_HEADERS = [
     b"www-authenticate",
 ]
 
-if TYPE_CHECKING:
-    testMixinClass = TestCase
-else:
-    testMixinClass = object
-
 
 class _RedirectAgentTestsMixin(testMixinClass):
     """
@@ -2696,7 +2667,7 @@ class _RedirectAgentTestsMixin(testMixin
         crossDomain: bool = False,
         crossPort: bool = False,
         requestHeaders: Optional[Headers] = None,
-    ) -> IRequest:
+    ) -> Request:
 
         """
         When getting a redirect, L{client.RedirectAgent} follows the URL
@@ -2784,7 +2755,7 @@ class _RedirectAgentTestsMixin(testMixin
 
 
     def _sensitiveHeadersTest(
-        self, expectedHostHeader: bytes = b"example.com", **crossKwargs: dict
+        self, expectedHostHeader: bytes = b"example.com", **crossKwargs: bool
     ) -> None:
         """
         L{client.RedirectAgent} scrubs sensitive headers when redirecting
@@ -3066,8 +3037,9 @@ class _RedirectAgentTestsMixin(testMixin
 
 
 
-class RedirectAgentTests(TestCase, FakeReactorAndConnectMixin,
-                         _RedirectAgentTestsMixin, AgentTestsMixin):
+class RedirectAgentTests(
+    FakeReactorAndConnectMixin, _RedirectAgentTestsMixin, AgentTestsMixin, runtimeTestCase,
+):
     """
     Tests for L{client.RedirectAgent}.
     """
@@ -3105,10 +3077,9 @@ class RedirectAgentTests(TestCase, FakeR
 
 
 
-class BrowserLikeRedirectAgentTests(TestCase,
-                                    FakeReactorAndConnectMixin,
-                                    _RedirectAgentTestsMixin,
-                                    AgentTestsMixin):
+class BrowserLikeRedirectAgentTests(
+    FakeReactorAndConnectMixin, _RedirectAgentTestsMixin, AgentTestsMixin, runtimeTestCase
+):
     """
     Tests for L{client.BrowserLikeRedirectAgent}.
     """
