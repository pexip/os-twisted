Description: Use pygtkcompat directly and fall back to gi.pygtkcompat
Bug: https://twistedmatrix.com/trac/ticket/6280
Author: Rodney Dawes <rodney.dawes@canonical.com>

=== modified file 'twisted/internet/gireactor.py'
--- old/twisted/internet/gireactor.py	2013-01-16 17:44:26 +0000
+++ new/twisted/internet/gireactor.py	2013-01-23 17:13:29 +0000
@@ -37,9 +37,12 @@ else:
     from twisted.python.modules import theSystemPath
     _pygtkcompatPresent = True
     try:
-        theSystemPath["gi.pygtkcompat"]
+        theSystemPath["pygtkcompat"]
     except KeyError:
-        _pygtkcompatPresent = False
+        try:
+            theSystemPath["gi.pygtkcompat"]
+        except KeyError:
+            _pygtkcompatPresent = False
 
 
 # Modules that we want to ensure aren't imported if we're on older versions of
@@ -75,8 +78,11 @@ else:
     # Newer version of gi, so we can try to initialize compatibility layer; if
     # real pygtk was already imported we'll get ImportError at this point
     # rather than segfault, so unconditional import is fine.
-    import gi.pygtkcompat
-    gi.pygtkcompat.enable()
+    try:
+        import pygtkcompat
+    except ImportError:
+        from gi import pygtkcompat
+    pygtkcompat.enable()
     # At this point importing gobject will get you gi version, and importing
     # e.g. gtk will either fail in non-segfaulty way or use gi version if user
     # does gi.pygtkcompat.enable_gtk(). So, no need to prevent imports of

